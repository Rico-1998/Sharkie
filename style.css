@font-face {
    font-family: 'evilEmpire';
    src: url('webfont.eot');
    /* IE9 Compat Modes */
    src: url('webfont.eot?#iefix') format('embedded-opentype'),
        /* IE6-IE8 */
        url('/img/5.Font/evilEmpire-4BBVK.ttf') format('truetype'),
        /* Safari, Android, iOS */
        url('webfont.svg#svgFontName') format('svg');
    /* Legacy iOS */
}

body {
    margin: 0;
    /* background-image: url('img/3. Background/Legacy/Dark/1.png');
    background-size: cover;
    height: 100vh; */
}

.background {
    display: flex;
    align-items: center;
    justify-content: center;
    background-image: url(/img/water.jpg) !important;
    background-position-x: center;
    height: 100vh;
    background-repeat: no-repeat;
}

.headline {
    display: flex;
    justify-content: center;
    font-size: 28px;
    font-family: 'evilEmpire', Arial, Helvetica, sans-serif;
    letter-spacing: 1px;
    height: 135px;
}

.startScreen {
    background-image: url('img/3. Background/Legacy/Dark/1.png');
    background-size: 100vw 100vh;
    background-repeat: no-repeat;
}

.startContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: fit-content;
    margin-top: 262px;
}

.glow-on-hover {
    font-family: 'evilEmpire', Arial, Helvetica, sans-serif;
    width: 220px;
    height: 50px;
    border: none;
    outline: none;
    color: #fff;
    background: #111;
    cursor: pointer;
    position: relative;
    z-index: 0;
    border-radius: 10px;
    font-size: 30px;
    letter-spacing: 2px;
}

.glow-on-hover:before {
    content: '';
    background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
    position: absolute;
    top: -2px;
    left: -2px;
    background-size: 400%;
    z-index: -1;
    filter: blur(5px);
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    animation: glowing 20s linear infinite;
    opacity: 0;
    transition: opacity .3s ease-in-out;
    border-radius: 10px;
}

.glow-on-hover:active {
    color: #000
}

.glow-on-hover:active:after {
    background: transparent;
}

.glow-on-hover:hover:before {
    opacity: 1;
}

.glow-on-hover:after {
    z-index: -1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(99, 122, 240, 0.6);
    filter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.4));
    left: 0;
    top: 0;
    border-radius: 10px;
}

@keyframes glowing {
    0% {
        background-position: 0 0;
    }

    50% {
        background-position: 400% 0;
    }

    100% {
        background-position: 0 0;
    }
}

.sharkie {
    height: 125px;
    rotate: 45deg;
}

.info {
    background-color: rgba(0, 0, 0, 0.2);
    width: 100%;
    height: 200px;
    margin-top: 70px;
    display: flex;
    align-items: center;
    transition: transform 1.0s ease-in-out;
    justify-content: space-evenly;
}

.settings {
    filter: invert(1);
    height: 50px;
    width: 50px;
    object-fit: cover;
}

.settings:hover {
    transform: scale(1.2) rotate(80deg);
    cursor: pointer;
}

.information {
    height: 50px;
    width: 50px;
    object-fit: cover;
    filter: invert(1);
}

.information:hover {
    cursor: pointer;
    transform: scale(1.2);
}

.playSection {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 3;
    height: 100vh;
    width: 100vw;
    background-color: rgba(0, 0, 0, 0.4);
    display: flex;
    justify-content: center;
    align-items: center;
}

.content {
    height: 500px;
}

.content {
    font-family: cursive;
    --angle: 0deg;
    width: 500px;
    height: 500px;
    border: 6px solid;
    border-image: conic-gradient(from var(--angle), red, yellow, lime, aqua, blue, magenta, red) 1;
    animation: 10s rotate linear infinite;
    display: flex;
    justify-content: center;
    color: white;
    background: rgb(160, 10, 250);
    background: radial-gradient(circle, rgba(160, 10, 250, 1) 0%, rgba(207, 213, 247, 0.22034751400560226) 100%);

}

@keyframes rotate {
    to {
        --angle: 360deg;
    }
}

@property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

canvas {
    background-color: black;
}

.d-none {
    display: none;
}